##########################################################
# Copyright (c) 2024 Lara Bergmann, Bielefeld University #
##########################################################

import pytest
import numpy as np
from gymnasium_planar_robotics.envs.basic_envs import BasicPlanarRoboticsEnv


@pytest.mark.parametrize(
    'layout_tiles, qpos, collision_params, add_safety_offset, expected_result, c_size',
    [
        # collsion shape circle, add_safety_offset = False, 0°
        (  # 0
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1]),
            None,
        ),
        (  # 1
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset_wall': 0.001},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 2
            np.array([[1, 1], [1, 1]]),
            np.array([[0, 0.12, 0.24] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'circle'},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 1]),
            None,
        ),
        (  # 3
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1]),
            None,
        ),
        (  # 4
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset_wall': 0.001},
            False,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 5
            np.array([[1, 1], [1, 1]]),
            np.array([[0, 0.12, 0.24] * 3, [0.24] * 3 + [0.36] * 3 + [0.48] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'circle'},
            False,
            np.array([0, 1, 1, 0, 1, 1, 0, 0, 0]),
            None,
        ),
        (  # 6
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1]),
            None,
        ),
        (  # 7
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset_wall': 0.001},
            False,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 8
            np.array([[1, 1], [1, 1]]),
            np.array([[0.24, 0.36, 0.48] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'circle'},
            False,
            np.array([0, 0, 0, 1, 1, 0, 1, 1, 0]),
            None,
        ),
        (  # 9
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1]),
            None,
        ),
        (  # 10
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset_wall': 0.001},
            False,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 11
            np.array([[1, 1], [1, 1]]),
            np.array([[0.24, 0.36, 0.48] * 3, [0.24] * 3 + [0.36] * 3 + [0.48] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'circle'},
            False,
            np.array([1, 1, 0, 1, 1, 0, 0, 0, 0]),
            None,
        ),
        # collsion shape box, add_safety_offset = False, 0°
        (  # 12
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0]),
            None,
        ),
        (  # 13
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset_wall': 0.001},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 14
            np.array([[1, 1], [1, 1]]),
            np.array([[0, 0.12, 0.24] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 1]),
            None,
        ),
        (  # 15
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]),
            None,
        ),
        (  # 16
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset_wall': 0.001},
            False,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 17
            np.array([[1, 1], [1, 1]]),
            np.array([[0, 0.12, 0.24] * 3, [0.24] * 3 + [0.36] * 3 + [0.48] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 1, 1, 0, 1, 1, 0, 0, 0]),
            None,
        ),
        (  # 18
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0]),
            None,
        ),
        (  # 19
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset_wall': 0.001},
            False,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 20
            np.array([[1, 1], [1, 1]]),
            np.array([[0.24, 0.36, 0.48] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 0, 0, 1, 1, 0, 1, 1, 0]),
            None,
        ),
        (  # 21
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0]),
            None,
        ),
        (  # 22
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset_wall': 0.001},
            False,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 23
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([1, 1, 0, 1, 1, 0, 0, 0, 0]),
            None,
        ),
        # collsion shape circle, add_safety_offset = True, 0°
        (  # 24
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 25
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 1]),
            None,
        ),
        (  # 26
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 27
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 1, 1, 0, 1, 1, 0, 0, 0]),
            None,
        ),
        (  # 28
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 29
            np.array([[1, 1], [1, 1]]),
            np.array([[0.24, 0.36, 0.48] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 0, 0, 1, 1, 0, 1, 1, 0]),
            None,
        ),
        (  # 30
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [1] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 31
            np.array([[1, 1], [1, 1]]),
            np.array([[0.24, 0.36, 0.48] * 3, [0.24] * 3 + [0.36] * 3 + [0.48] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([1, 1, 0, 1, 1, 0, 0, 0, 0]),
            None,
        ),
        # collsion shape box, add_safety_offset = True, 0°
        (  # 32
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 33
            np.array([[1, 1], [1, 1]]),
            np.array([[0, 0.12, 0.24] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 1]),
            None,
        ),
        (  # 34
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 35
            np.array([[1, 1], [1, 1]]),
            np.array([[0, 0.12, 0.24] * 3, [0.24] * 3 + [0.36] * 3 + [0.48] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 1, 1, 0, 1, 1, 0, 0, 0]),
            None,
        ),
        (  # 36
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 37
            np.array([[1, 1], [1, 1]]),
            np.array([[0.24, 0.36, 0.48] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 1, 1, 0, 1, 1, 0]),
            None,
        ),
        (  # 38
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [1] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 39
            np.array([[1, 1], [1, 1]]),
            np.array([[0.24, 0.36, 0.48] * 3, [0.24] * 3 + [0.36] * 3 + [0.48] * 3, [0] * 9, [1] * 9, [0] * 9, [0] * 9, [0] * 9]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([1, 1, 0, 1, 1, 0, 0, 0, 0]),
            None,
        ),
        # collsion shape circle, add_safety_offset = False, 90°
        (  # 40
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1]),
            None,
        ),
        (  # 41
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset_wall': 0.001},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 42
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 1, 1, 0, 1, 1, 0, 0, 0]),
            None,
        ),
        (  # 43
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1]),
            None,
        ),
        (  # 44
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset_wall': 0.001},
            False,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 45
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 1, 1, 0, 1, 1, 0, 0, 0]),
            None,
        ),
        (  # 46
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1]),
            None,
        ),
        (  # 47
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset_wall': 0.001},
            False,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 48
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 0, 0, 1, 1, 0, 1, 1, 0]),
            None,
        ),
        (  # 49
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1]),
            None,
        ),
        (  # 50
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset_wall': 0.001},
            False,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 51
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'circle'},
            False,
            np.array([1, 1, 0, 1, 1, 0, 0, 0, 0]),
            None,
        ),
        # collsion shape box, add_safety_offset = False
        (  # 52
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0]),
            None,
        ),
        (  # 53
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset_wall': 0.001},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 54
            np.array([[1, 1], [1, 1]]),
            np.array(
                [[0, 0.12, 0.24] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [0.7071068] * 9, [0] * 9, [0] * 9, [0.7071068] * 9]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 1]),
            None,
        ),
        (  # 55
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]),
            None,
        ),
        (  # 56
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset_wall': 0.001},
            False,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 57
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 1, 1, 0, 1, 1, 0, 0, 0]),
            None,
        ),
        (  # 58
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0]),
            None,
        ),
        (  # 59
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset_wall': 0.001},
            False,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 60
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 0, 0, 1, 1, 0, 1, 1, 0]),
            None,
        ),
        (  # 61
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0]),
            None,
        ),
        (  # 62
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset_wall': 0.001},
            False,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 63
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08])},
            False,
            np.array([1, 1, 0, 1, 1, 0, 0, 0, 0]),
            None,
        ),
        # collsion shape circle, add_safety_offset = True, 90°
        (  # 64
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 65
            np.array([[1, 1], [1, 1]]),
            np.array(
                [[0, 0.12, 0.24] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [0.7071068] * 9, [0] * 9, [0] * 9, [0.7071068] * 9]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 1]),
            None,
        ),
        (  # 66
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.11, 0.111] + [0.12] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 67
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 1, 1, 0, 1, 1, 0, 0, 0]),
            None,
        ),
        (  # 68
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.11, 0.111],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 69
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 0, 0, 1, 1, 0, 1, 1, 0]),
            None,
        ),
        (  # 70
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.37, 0.369] + [0.36] * 2,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.37, 0.369],
                    [0] * 13,
                    [0.7071068] * 13,
                    [0] * 13,
                    [0] * 13,
                    [0.7071068] * 13,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 71
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'circle', 'offset': 0.005},
            True,
            np.array([1, 1, 0, 1, 1, 0, 0, 0, 0]),
            None,
        ),
        # collsion shape box, add_safety_offset = True, 90°
        (  # 72
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 73
            np.array([[1, 1], [1, 1]]),
            np.array(
                [[0, 0.12, 0.24] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [0.7071068] * 9, [0] * 9, [0] * 9, [0.7071068] * 9]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 1, 1, 0, 1, 1]),
            None,
        ),
        (  # 74
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 75
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 1, 1, 0, 1, 1, 0, 0, 0]),
            None,
        ),
        (  # 76
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 77
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 1, 1, 0, 1, 1, 0]),
            None,
        ),
        (  # 78
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4],
                    [0] * 14,
                    [0.7071068] * 14,
                    [0] * 14,
                    [0] * 14,
                    [0.7071068] * 14,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 79
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.7071068] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.7071068] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([1, 1, 0, 1, 1, 0, 0, 0, 0]),
            None,
        ),
        # collsion shape box, add_safety_offset = True, 45°
        (  # 80
            np.array([[1, 1], [1, 0]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08, 0.2],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08, 0.2],
                    [0] * 15,
                    [0.9238795] * 15,
                    [0] * 15,
                    [0] * 15,
                    [0.3826834] * 15,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 81
            np.array([[1, 1], [1, 1]]),
            np.array(
                [[0, 0.12, 0.24] * 3, [0] * 3 + [0.12] * 3 + [0.24] * 3, [0] * 9, [0.9238795] * 9, [0] * 9, [0] * 9, [0.3826834] * 9]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 1]),
            None,
        ),
        (  # 82
            np.array([[1, 1], [0, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3 + [0.08, 0.081] + [0.12] * 2 + [0.08, 0.2],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4, 0.28],
                    [0] * 15,
                    [0.9238795] * 15,
                    [0] * 15,
                    [0] * 15,
                    [0.3826834] * 15,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 83
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0, 0.12, 0.24] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.9238795] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.3826834] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 1, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 84
            np.array([[1, 0], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4, 0.28],
                    [0] * 3 + [0.12] * 3 + [0.24] * 3 + [0.12] * 2 + [0.08, 0.081] + [0.08, 0.2],
                    [0] * 15,
                    [0.9238795] * 15,
                    [0] * 15,
                    [0] * 15,
                    [0.3826834] * 15,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 85
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0] * 3 + [0.12] * 3 + [0.24] * 3,
                    [0] * 9,
                    [0.9238795] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.3826834] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 1, 0, 0]),
            None,
        ),
        (  # 86
            np.array([[0, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3 + [0.4, 0.399] + [0.36] * 2 + [0.4, 0.28],
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3 + [0.36] * 2 + [0.4, 0.399] + [0.4, 0.28],
                    [0] * 15,
                    [0.9238795] * 15,
                    [0] * 15,
                    [0] * 15,
                    [0.3826834] * 15,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 87
            np.array([[1, 1], [1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [0.9238795] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0.3826834] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([1, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        # different sizes
        (  # 88
            np.array([[1, 1], [1, 1]]),
            np.array([[0.24, 0.24], [0.24, 0.24], [0, 0], [0.9238795] * 2, [0] * 2, [0] * 2, [0.3826834] * 2]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([1, 1]),
            np.array([[0.08, 0.08], [0.02, 0.02]]),
        ),
        (  # 89
            np.array([[1, 1], [1, 1]]),
            np.array([[0.24, 0.24], [0.24, 0.24], [0, 0], [0.9238795] * 2, [0] * 2, [0] * 2, [0.3826834] * 2]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([1, 1]),
            np.array([[0.02, 0.08], [0.08, 0.02]]),
        ),
        (  # 90
            np.array([[1, 1], [1, 1]]),
            np.array([[0.12, 0.12], [0.12, 0.12], [0, 0], [0.9238795] * 2, [0] * 2, [0] * 2, [0.3826834] * 2]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([0, 1]),
            np.array([[0.08, 0.08], [0.02, 0.02]]),
        ),
        (  # 91
            np.array([[1, 1], [1, 1]]),
            np.array([[0.12, 0.12], [0.12, 0.12], [0, 0], [0.9238795] * 2, [0] * 2, [0] * 2, [0.3826834] * 2]).T,
            {'shape': 'box', 'size': np.array([0.08, 0.08]), 'offset': 0.01},
            True,
            np.array([1, 1]),
            np.array([[0.02, 0.08], [0.08, 0.02]]),
        ),
        # mover larger than tile
        (  # 92
            np.array([[1, 0, 1], [1, 1, 1], [1, 1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.3, 0.3]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 93
            np.array([[1, 1, 1], [1, 1, 1], [1, 0, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.3, 0.3]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 94
            np.array([[1, 1, 1], [0, 1, 1], [1, 1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.3, 0.3]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 95
            np.array([[1, 1, 1], [1, 1, 0], [1, 1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.3, 0.3]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 96
            np.array([[0, 1, 1], [1, 1, 1], [1, 1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.3, 0.3]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 97
            np.array([[1, 1, 0], [1, 1, 1], [1, 1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.3, 0.3]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 98
            np.array([[1, 1, 1], [1, 1, 1], [0, 1, 1]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.3, 0.3]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
        (  # 99
            np.array([[1, 1, 1], [1, 1, 1], [1, 1, 0]]),
            np.array(
                [
                    [0.24, 0.36, 0.48] * 3,
                    [0.24] * 3 + [0.36] * 3 + [0.48] * 3,
                    [0] * 9,
                    [1] * 9,
                    [0] * 9,
                    [0] * 9,
                    [0] * 9,
                ]
            ).T,
            {'shape': 'box', 'size': np.array([0.3, 0.3]), 'offset': 0.01},
            True,
            np.array([0, 0, 0, 0, 0, 0, 0, 0, 0]),
            None,
        ),
    ],
)
def test_mover_position_is_valid_check(layout_tiles, qpos, collision_params, add_safety_offset, expected_result, c_size):
    env = BasicPlanarRoboticsEnv(layout_tiles=layout_tiles, num_movers=1, collision_params=collision_params)

    num_qpos = qpos.shape[0]
    pos_is_valid = env.qpos_is_valid(qpos, c_size=c_size if c_size is not None else env.c_size, add_safety_offset=add_safety_offset)

    # test output shape and result
    assert len(pos_is_valid.shape) == 1
    assert pos_is_valid.shape[0] == num_qpos
    assert (pos_is_valid == expected_result).all()
